/*	빙고 게임
[문제]
빙고 게임은 다음과 같은 방식으로 이루이진다.
먼저 아래와 같이 25개의 칸으로 이루어진 빙고판에 1부터 25까지의 자연수를 한 칸에 하나씩 쓴다.

11	12	2	24	10
16	1	13	3	25
6	20	5	21	17
19	4	8	14	9
22	15	7	23	18

다음은 사회자가 부르는 수를 차례로 지워나간다.
예를 들어 5 10 7이 불렸다면, 이 세 수를 지운 뒤 빙고판의 모습은 다음과 같다.

11	12	2	24	X
16	1	13	3	25
6	20	X	21	17
19	4	8	14	9
22	15	X	23	18

차례로 수를 지워가다가 같은 가로/세로줄 또는 대각선 위에 있는 5개의 모든 수가 지워지는 경우,
그 줄에 선을 긋는다.

11	12	X	24	X
X	1	X	X	25
6	20	X	21	X
19	X	X	14	9
X	15	X	23	18

이러한 선이 세 개 이상 그어지는 순간 "빙고"라고 외치는데,
가장 먼저 외치는 사람이 게임의 승자가 된다.

11	12	X	24	X
X	X	X	X	X
6	20	X	21	X
19	X	X	14	9
X	15	X	23	18

철수는 친구들과 빙고 게임을 하고 있다.
철수가 빙고판에 쓴 수들과 사회자가 부르는 수의 순서가 주어질 때,
사회자가 몇번째 수를 부른 후 철수가 "빙고"를 외치게 되는지 출력하는 프로그램을 작성하시오.

[입력]
첫째 줄부터 다섯째 줄까지 빙고판에 쓰여진 수가 가장 위 가로줄로부터 차례대로 한 줄에 다섯개씩 빈칸을 사이에 두고 주어진다.
여섯째 줄부터 열째 줄까지 사회자가 부르는 수가 차례대로 한 줄에 다섯개씩 빈칸을 사이에 두고 주어진다.
빙고판에 쓰여진 수와 사회자가 부르는 수는 각각 1부터 25까지의 수가 한번씩 사용된다.

[출력]
첫째 줄에 사회자가 몇번째 수를 부른 후 철수가 "빙고"를 외치게 되는지 출력한다.

[입력 예시]
11	12	2	24	10
16	1	13	3	25
6	20	5	21	17
19	4	8	14	9
22	15	7	23	18
5	10	7	16	2
4	22	8	17	13
3	18	1	6	25
12	19	23	14	21
11	24	9	20	15

[출력 예시]
15
 */
package SWCert_INT;

import java.util.*;
import java.io.*;

public class IM_JO1031_Bingo {
	static int Player[][];
	static int MC[];
	static int Answer;
	
	static int N, tmp, cnt, BingoCnt;
	static int Num;
	public static void main(String args[]) throws Exception{
		System.setIn(new FileInputStream("D:\\Redan_Workspace\\SWCert_Src\\Input (IM_JO1031_Bingo).txt"));
		Scanner sc = new Scanner(System.in);
		
		N = 5;
		tmp = cnt = BingoCnt = 0;
		Player = new int[N][N];
		
		for(int i = 0; i < N; i++) {
			for(int j = 0; j < N; j++) {
				Player[i][j] = sc.nextInt();
			}
		}
		
		MC = new int[N * N];
		for(int i = 0; i < N * N; i++) {
			int Flag = 0;
			if(12 <= cnt) {
				Check();
				if(3 <= BingoCnt) {
					break;
				}
			}
			
			MC[i] = sc.nextInt();
			for(int j = 0; j < N; j++) {
				for(int k = 0; k < N; k++) {
					if(MC[i] == Player[j][k]) {
						cnt++;
						Player[j][k] = 0;
						Flag = 1;
						break;
					}
				}
				if(Flag ==1) {
					break;
				}
			}
		}
		
		System.out.println(Answer);
		
		//	End Test Case
	}	//	End Main
	
	public static void Check() {
		BingoCnt = 0;
		for(int j = 0; j < N; j++) {
			tmp+= Player[j][j];
		}
		if(tmp ==0) {
			BingoCnt++;
		}
		tmp = 0;
		
		for(int j = 0; j < N; j++) {
			int k = N - j - 1;
			tmp+= Player[k][j];
		}
		if(tmp == 0) {
			BingoCnt++;
		}
		tmp = 0;
		
		for(int j = 0; j < N; j++) {
			for(int k = 0; k < N; k++) {
				tmp+= Player[k][j];
			}
			if(tmp == 0) {
				BingoCnt++;
			}
			tmp = 0;
		}
		
		for(int j = 0; j < N; j++) {
			for(int k = 0; k < N; k++) {
				tmp += Player[j][k];
			}
			if(tmp == 0) {
				BingoCnt++;
			}
			tmp = 0;
		}
		
		if(3 <= BingoCnt) {
			Answer = cnt;
		}
	}	//	End Check
}	//	End Class